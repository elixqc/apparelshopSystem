<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="FileSystemWatcher1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>